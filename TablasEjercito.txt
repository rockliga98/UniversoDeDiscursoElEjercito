

//Tabla Ascenso//

CREATE TABLE ASCENSO
(
	ASCENSO_ID serial PRIMARY KEY,
	ASCENSO_FECHA date   NOT NULL,
	PETICION_ASCENSO_ID integer NOT NULL
);


//Tabla Batallon//

CREATE TABLE BATALLON
(
	BATALLON_ID serial PRIMARY KEY,
	BATALLON_NUMERO integer   NOT NULL,
	BATALLON_ALIAS varchar(40)	NOT NULL,
	BATALLON_MILITAR_ALMANDO varchar(40) NOT NULL
);


//Tabla Calificaci√≥n//

CREATE TABLE CALIFICACION 
(
	CALIFICACION_ID serial PRIMARY KEY,
	CALIFICACION_NOMBRE varchar(40) NOT NULL,
	CALIFICACION_DESCRIPCION varchar(40) NOT NULL
);



//Tabla Castigo//

CREATE TABLE CASTIGO
(
	CASTIGO_ID serial PRIMARY KEY,
	CASTIGO_F_INCIDENTE date NOT NULL,
	CASTIGO_F_INICIO date NOT NULL ,
	CASTIGO_F_TERMINO date NOT NULL,
	CASTIGO_MOTIVO varchar(60) NOT NULL ,
	SANCIONADO_ID integer  NOT NULL,
	SANCIONADOR_ID integer  NOT NULL
);


//Tabla Entrenamiento//

CREATE TABLE ENTRENAMIENTO
(
	ENTRENAMIENTO_ID serial PRIMARY KEY,
	ENTRENAMIENTO_F_INICIO date NOT NULL,
	ENTRENAMIENTO_F_TERMINO date NOT NULL ,
	BATALLON_ID integer  NOT NULL,
	CALIFICACION_ID integer  NOT NULL
);



CREATE TABLE PETICION_ASCENSO
(
	PETICION_ASCENSO_ID serial PRIMARY KEY,
	ASPIRANTE_ID integer NOT NULL,
	PETICION_ASCENSO_FECHA date NOT NULL,
	PETICION_ASCENSO_N_T_ENCONTRADOS integer NOT NULL,
	RANGO_ACTUAL_ID integer  NOT NULL,
	RANGO_ASCENDER_ID integer  NOT NULL
	
);



//Tabla Rango//

CREATE TABLE RANGO 
(
	RANGO_ID serial PRIMARY KEY,
	RANGO_NOMBRE varchar(40),
	RANGO_DESCRIPCION varchar(60),
	RANGO_ANTERIOR varchar(40),
	RANGO_A_NECESARIO integer,
	RANGO_P_EVALUAR varchar(60) 
);

//Tabla Soldado//

CREATE TABLE SOLDADO
(
	SOLDADO_ID serial PRIMARY KEY,
	SOLDADO_NOMBRE varchar(40),
	SOLDADO_APELLIDO varchar(40),
	SOLDADO_CI varchar(40),
	SOLDADO_GENERO varchar(40),
	SOLDADO_F_NACIMIENTO date,
	SOLDADO_F_INGRESO date,
	SOLDADO_N_TATUAJE integer,
	RANGO_ID integer,
	BATALLON_ID integer ,
	CONSTRAINT SOLDADO_RANGO_FK FOREIGN KEY (RANGO_ID) REFERENCES RANGO (RANGO_ID) 
	ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT SOLDADO_BATALLON_FK FOREIGN KEY (BATALLON_ID) REFERENCES BATALLON (BATALLON_ID) 
	ON DELETE CASCADE ON UPDATE CASCADE
);

